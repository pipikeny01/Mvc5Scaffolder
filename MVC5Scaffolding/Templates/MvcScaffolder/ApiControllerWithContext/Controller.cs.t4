<#@ template language="C#" HostSpecific="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq" #>
<#@ assembly name="System.Runtime" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ import namespace="Microsoft.AspNet.Scaffolding.Core.Metadata" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ parameter type="System.String" name="ControllerName" #>
<#@ parameter type="System.String" name="ControllerRootName" #>
<#@ parameter type="System.String" name="Namespace" #>
<#@ parameter type="System.String" name="ContextTypeName" #>
<#@ parameter type="System.String" name="ModelTypeName" #>
<#@ parameter type="System.String" name="ModelVariable" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata" name="ModelMetadata" #>
<#@ parameter type="System.Boolean" name="UseAsync" #>
<#@ parameter type="System.Collections.Generic.HashSet<System.String>" name="RequiredNamespaces" #>
<#
string routePrefix = "api/" + ControllerRootName;
#>
using AutoMapper;
using DAL.Core.Dto;
using System.Web.Http;
using DAL.Project.Model;
using DAL.Project.Repository;
using WebApp.AppCode.Core;
using WebApp.AppCode.Core.Filter;
using WebApp.AppCode.Project.Service;
using WebApp.AppCode.Sys.ViewModel;

namespace <#= Namespace #>
{
<#
    var entitySetName = ModelMetadata.EntitySetName;
    var primaryKeyName = ModelMetadata.PrimaryKeys[0].PropertyName;
    var primaryKeyShortTypeName = ModelMetadata.PrimaryKeys[0].ShortTypeName;
    var primaryKeyDefaultValue = ModelMetadata.PrimaryKeys[0].DefaultValue;
    var primaryKeyType = ModelMetadata.PrimaryKeys[0].TypeName;
    var primaryKeyIsAutoGenerated = ModelMetadata.PrimaryKeys[0].IsAutoGenerated;

    var controllerNameOnly  = ControllerName.Replace("Api","").Replace("Controller","");
    
    var entifyName= entitySetName.TrimEnd('s');
    var serviceName =  controllerNameOnly + "Service";
    var iserviceName = "I"+ controllerNameOnly + "Service";
    var serviceFieldName = "_"+ FirstCharLower(controllerNameOnly) +"Service";
    var viewMoel= controllerNameOnly + "ListViewModel";
    var editViewMoel= controllerNameOnly + "EditViewModel";
    var queryDto = "Query" + controllerNameOnly + "Dto";
           
    var repos =  "_"+ FirstCharLower(entitySetName)+"Repos";

    var iReposName = "I" + entifyName+ "Repos";

     string FirstCharLower(string original)
     {
            if (original.Length > 0)
            {
                return string.Format("{0}{1}", original.Substring(0, 1).ToLower(),
                original.Substring(1, original.Length - 1));
            }

            return original;
    }
#>

    //有需要匯出就實作IExportExcelApiController
       public class <#= ControllerName #> : BaseApiController,
       ICrudApiController< <#= queryDto #>,<#= editViewMoel #>>
    {
        private readonly <#= iserviceName #>  <#= serviceFieldName #> ;

        public  <#= ControllerName #>(<#= iserviceName #> <#= FirstCharLower(entitySetName) #>Service)
        {
            <#= serviceFieldName #> = <#= FirstCharLower(entitySetName) #>Service;
        }

        [HttpPost]
        [PowerQuery]
        public IHttpActionResult List(<#= queryDto #> query)
        {
           var selectDataModel = <#= serviceFieldName #>.SelectDataModel(query);
            AppendPower(selectDataModel);
            return Ok(selectDataModel);
        }

        [HttpGet]
        [PowerQuery]
        public IHttpActionResult GetViewModel(int id)
        {
            return Ok(<#= serviceFieldName #>.GetViewModel(id));
        }


        [HttpPost]
        [PowerCreate]
        public IHttpActionResult Create(<#= editViewMoel #> model)
        {
            return Ok(<#= serviceFieldName #>.CreateFormViewModel(model));

        }

        [HttpPost]
        [PowerEdit]
        public IHttpActionResult Update(<#= editViewMoel #>  model)
        {
            <#= serviceFieldName #>.EditFormViewModel(model);
            return Ok();
        }

        [HttpPost]
        [PowerDelete]
        public IHttpActionResult Delete(DeleteDto dto)
        {
            <#= serviceFieldName #>.Delete(dto.Id);
            return Ok();
        }       
    }
    
    public class <#= viewMoel #> : BaseListViewModel
    {
    
    }

    public class <#= viewMoel #>Profile : Profile
    {
        public <#= viewMoel #>Profile()
        {
            CreateMap<<#= entifyName #>, <#= viewMoel #>>();

        }
    }
    public class  <#= editViewMoel #> : BaseEditViewModel
    {
         }
    public class <#= editViewMoel #>Profile : Profile
    {
        public <#= editViewMoel #>Profile()
        {
            CreateMap<<#= entifyName #>, <#= editViewMoel #>>();
            CreateMap<<#= editViewMoel #>, <#= entifyName #>>();

        }
    }

}